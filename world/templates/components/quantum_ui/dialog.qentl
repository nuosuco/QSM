# 量子对话框组件
# 量子基因: QG-COMP-DIALOG-A1B1
# 量子纠缠: QE-COMP-DIALOG-20240404

@component q-dialog
@props
  visible: boolean = false       # 是否显示对话框
  title: string = ""            # 对话框标题
  width: string = "500px"       # 对话框宽度
  top: string = "15vh"          # 对话框距顶部距离
  modal: boolean = true         # 是否显示遮罩层
  closeOnClickModal: boolean = true # 点击遮罩层是否关闭
  showClose: boolean = true     # 是否显示关闭按钮
  center: boolean = false       # 是否居中布局
  fullscreen: boolean = false   # 是否全屏显示
  customClass: string = ""      # 自定义类名
  entangleStrength: number = 1.0 # 量子纠缠强度
  type: string = "default"      # 对话框类型：default/info/success/warning/error

@template
<div class="q-dialog-wrapper"
     v-show="visible"
     data-quantum-entangle='{
       "id": "dialog-${@id}",
       "strength": ${entangleStrength},
       "sync": true
     }'
>
    @if modal
    <div class="q-dialog-overlay"
         @click="closeOnClickModal && handleClose()"
    ></div>
    @endif
    
    <div class="q-dialog"
         :class="[
           customClass,
           `q-dialog-${type}`,
           { 'q-dialog-center': center },
           { 'q-dialog-fullscreen': fullscreen }
         ]"
         :style="{
           width: fullscreen ? '100%' : width,
           marginTop: fullscreen ? '0' : top
         }"
         role="dialog"
         aria-modal="true"
    >
        <div class="q-dialog-header">
            <h3 class="q-dialog-title">${title}</h3>
            @if showClose
            <button class="q-dialog-close"
                    @click="handleClose"
                    aria-label="关闭"
            >
                <span class="q-dialog-close-icon">×</span>
            </button>
            @endif
        </div>
        
        <div class="q-dialog-body">
            <slot></slot>
        </div>
        
        <div class="q-dialog-footer">
            <slot name="footer">
                <button class="q-btn q-btn-default"
                        @click="handleCancel"
                >取消</button>
                <button class="q-btn q-btn-primary"
                        @click="handleConfirm"
                >确定</button>
            </slot>
        </div>
    </div>
</div>

@style
.q-dialog-wrapper {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 2000;
    display: flex;
    justify-content: center;
}

.q-dialog-overlay {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-color: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(4px);
}

.q-dialog {
    position: relative;
    margin: 0 auto;
    background-color: var(--q-gray-50);
    border-radius: var(--q-radius-lg);
    box-shadow: var(--q-shadow-lg);
    transition: var(--q-transition);
    max-height: calc(100vh - 30vh);
    display: flex;
    flex-direction: column;
}

.q-dialog-center {
    margin: auto;
}

.q-dialog-fullscreen {
    width: 100%;
    height: 100%;
    margin: 0;
    border-radius: 0;
    max-height: 100vh;
}

.q-dialog-header {
    padding: var(--q-spacing-4);
    border-bottom: 1px solid var(--q-gray-200);
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.q-dialog-title {
    margin: 0;
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--q-gray-900);
}

.q-dialog-close {
    background: none;
    border: none;
    padding: var(--q-spacing-1);
    cursor: pointer;
    color: var(--q-gray-500);
    transition: var(--q-transition);
}

.q-dialog-close:hover {
    color: var(--q-gray-700);
}

.q-dialog-close-icon {
    font-size: 1.5rem;
    line-height: 1;
}

.q-dialog-body {
    padding: var(--q-spacing-4);
    overflow-y: auto;
    flex: 1;
}

.q-dialog-footer {
    padding: var(--q-spacing-4);
    border-top: 1px solid var(--q-gray-200);
    display: flex;
    justify-content: flex-end;
    gap: var(--q-spacing-2);
}

/* 对话框类型样式 */
.q-dialog-info .q-dialog-header {
    border-bottom-color: var(--q-info);
}

.q-dialog-success .q-dialog-header {
    border-bottom-color: var(--q-success);
}

.q-dialog-warning .q-dialog-header {
    border-bottom-color: var(--q-warning);
}

.q-dialog-error .q-dialog-header {
    border-bottom-color: var(--q-error);
}

/* 动画效果 */
.q-dialog-enter-active,
.q-dialog-leave-active {
    transition: all 0.3s ease;
}

.q-dialog-enter-from,
.q-dialog-leave-to {
    transform: translateY(-20px);
    opacity: 0;
}

.q-dialog-overlay-enter-active,
.q-dialog-overlay-leave-active {
    transition: opacity 0.3s ease;
}

.q-dialog-overlay-enter-from,
.q-dialog-overlay-leave-to {
    opacity: 0;
}

/* 量子纠缠效果 */
.q-dialog[data-quantum-entangle] {
    position: relative;
}

.q-dialog[data-quantum-entangle]::before {
    content: '';
    position: absolute;
    inset: -2px;
    border: 2px solid transparent;
    border-radius: inherit;
    pointer-events: none;
    animation: q-glow 2s infinite;
    opacity: 0.5;
}

@media (max-width: 768px) {
    .q-dialog {
        width: 90% !important;
        margin: 10vh auto !important;
    }
    
    .q-dialog-fullscreen {
        width: 100% !important;
        margin: 0 !important;
    }
}

@script
export default {
    data() {
        return {
            isVisible: this.visible
        };
    },
    
    mounted() {
        // 设置量子纠缠
        const dialogId = `dialog-${this.id}`;
        window.quantumEntangle.addObject(dialogId);
        window.quantumEntangle.setStrength(this.entangleStrength);
        
        // 监听ESC键关闭对话框
        document.addEventListener('keydown', this.handleKeydown);
    },
    
    methods: {
        handleClose() {
            this.isVisible = false;
            this.emitEvent('close');
        },
        
        handleCancel() {
            this.emitEvent('cancel');
            this.handleClose();
        },
        
        handleConfirm() {
            this.emitEvent('confirm');
            this.handleClose();
        },
        
        handleKeydown(event) {
            if (event.key === 'Escape' && this.isVisible) {
                this.handleClose();
            }
        },
        
        emitEvent(type) {
            // 发送量子纠缠消息
            window.quantumEntangle.send('dialog_event', {
                id: `dialog-${this.id}`,
                type: type
            });
        }
    },
    
    watch: {
        visible(val) {
            this.isVisible = val;
            
            if (val) {
                document.body.style.overflow = 'hidden';
            } else {
                document.body.style.overflow = '';
            }
            
            // 发送量子纠缠消息
            window.quantumEntangle.send('dialog_visible_change', {
                id: `dialog-${this.id}`,
                visible: val
            });
        }
    },
    
    beforeDestroy() {
        // 清理事件监听
        document.removeEventListener('keydown', this.handleKeydown);
        
        // 清理量子纠缠
        window.quantumEntangle.removeObject(`dialog-${this.id}`);
        
        // 恢复body滚动
        document.body.style.overflow = '';
    }
} 