# 量子卡片组件
# 量子基因: QG-COMP-CARD-A1B1
# 量子纠缠: QE-COMP-CARD-20240404

@component q-card
@props
  title: string = ""              # 卡片标题
  content: string = ""            # 卡片内容
  image: string = ""              # 图片URL
  imageAlt: string = ""           # 图片替代文本
  actions: array = []             # 操作按钮数组
  entangleStrength: number = 0.8  # 量子纠缠强度
  theme: string = "light"         # 主题：light/dark
  elevation: number = 1           # 阴影等级：1-5
  width: string = "100%"          # 卡片宽度
  height: string = "auto"         # 卡片高度
  rounded: boolean = true         # 是否圆角
  hoverable: boolean = true       # 是否有悬浮效果

@template
<div class="q-card"
     data-quantum-entangle='{
       "id": "card-${@id}",
       "strength": ${entangleStrength},
       "state": "active"
     }'
     data-theme="${theme}"
     data-elevation="${elevation}"
     style="width: ${width}; height: ${height};"
     class="${rounded ? 'rounded' : ''} ${hoverable ? 'hoverable' : ''}"
>
    @if image
    <div class="q-card-image">
        <img src="${image}" alt="${imageAlt}" loading="lazy">
    </div>
    @endif
    
    <div class="q-card-content">
        @if title
        <h3 class="q-card-title">${title}</h3>
        @endif
        
        @if content
        <div class="q-card-text">${content}</div>
        @endif
        
        @if actions.length > 0
        <div class="q-card-actions">
            @each action in actions
            <button 
                class="q-btn ${action.type || 'primary'}"
                onclick="${action.onClick}"
                data-quantum-entangle="true"
            >
                ${action.text}
            </button>
            @end
        </div>
        @endif
    </div>
</div>

@style
.q-card {
    position: relative;
    background: var(--q-gray-50);
    border: 1px solid var(--q-gray-200);
    transition: var(--q-transition);
    overflow: hidden;
}

.q-card.rounded {
    border-radius: var(--q-radius-lg);
}

.q-card.hoverable:hover {
    transform: translateY(-4px);
    box-shadow: var(--q-shadow-lg);
}

.q-card[data-elevation="1"] { box-shadow: var(--q-shadow-sm); }
.q-card[data-elevation="2"] { box-shadow: var(--q-shadow-md); }
.q-card[data-elevation="3"] { box-shadow: var(--q-shadow-lg); }
.q-card[data-elevation="4"] { box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1); }
.q-card[data-elevation="5"] { box-shadow: 0 25px 30px -10px rgb(0 0 0 / 0.1); }

.q-card[data-theme="dark"] {
    background: var(--q-gray-800);
    border-color: var(--q-gray-700);
}

.q-card-image {
    width: 100%;
    height: 200px;
    overflow: hidden;
}

.q-card-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: var(--q-transition);
}

.q-card.hoverable:hover .q-card-image img {
    transform: scale(1.05);
}

.q-card-content {
    padding: var(--q-spacing-4);
}

.q-card-title {
    color: var(--q-gray-900);
    font-size: 1.25rem;
    font-weight: 600;
    margin-bottom: var(--q-spacing-2);
}

.q-card[data-theme="dark"] .q-card-title {
    color: var(--q-gray-100);
}

.q-card-text {
    color: var(--q-gray-600);
    font-size: 1rem;
    line-height: 1.5;
    margin-bottom: var(--q-spacing-4);
}

.q-card[data-theme="dark"] .q-card-text {
    color: var(--q-gray-400);
}

.q-card-actions {
    display: flex;
    gap: var(--q-spacing-2);
    padding-top: var(--q-spacing-2);
    border-top: 1px solid var(--q-gray-200);
}

.q-card[data-theme="dark"] .q-card-actions {
    border-color: var(--q-gray-700);
}

/* 量子纠缠效果 */
.q-card[data-quantum-entangle] {
    position: relative;
}

.q-card[data-quantum-entangle]::before {
    content: '';
    position: absolute;
    inset: 0;
    border: 2px solid transparent;
    border-radius: inherit;
    pointer-events: none;
    animation: q-glow 2s infinite;
    opacity: 0;
    transition: opacity 0.3s ease;
}

.q-card[data-quantum-entangle]:hover::before {
    opacity: 1;
}

@media (max-width: 768px) {
    .q-card-image {
        height: 150px;
    }
    
    .q-card-content {
        padding: var(--q-spacing-3);
    }
    
    .q-card-title {
        font-size: 1.1rem;
    }
    
    .q-card-text {
        font-size: 0.9rem;
    }
}

@script
export default {
    mounted() {
        // 初始化量子纠缠
        const strength = this.entangleStrength;
        const cardId = `card-${this.id}`;
        
        window.quantumEntangle.addObject(cardId);
        window.quantumEntangle.setStrength(strength);
        
        // 监听操作按钮点击
        this.actions.forEach((action, index) => {
            if (action.onClick) {
                window.quantumEntangle.subscribe(`${cardId}-action-${index}`, (data) => {
                    action.onClick(data);
                });
            }
        });
    },
    
    beforeDestroy() {
        // 清理量子纠缠
        const cardId = `card-${this.id}`;
        window.quantumEntangle.removeObject(cardId);
        
        // 清理事件监听
        this.actions.forEach((_, index) => {
            window.quantumEntangle.unsubscribe(`${cardId}-action-${index}`);
        });
    }
} 