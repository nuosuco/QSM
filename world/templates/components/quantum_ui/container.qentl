/* 量子基因编码 */
QG-COMP-CONTAINER-UI-LAYOUT-A1B1

/* 量子纠缝信道 */
@quantum-entangle {
  strength: 0.8,
  sync: true,
  objects: [
    "world/static/css/quantum-theme.qcss",
    "world/static/css/quantum-layout.qcss"
  ]
}

/* 组件定义 */
@component QuantumContainer {
  /* 属性定义 */
  props: {
    fluid: {
      type: Boolean,
      default: false
    },
    maxWidth: {
      type: [String, Number],
      default: '1200px'
    },
    padding: {
      type: [String, Number],
      default: '24px'
    },
    gutter: {
      type: [String, Number],
      default: '24px'
    },
    align: {
      type: String,
      default: 'start',
      values: ['start', 'center', 'end', 'stretch']
    },
    justify: {
      type: String,
      default: 'start',
      values: ['start', 'center', 'end', 'space-between', 'space-around']
    },
    direction: {
      type: String,
      default: 'row',
      values: ['row', 'row-reverse', 'column', 'column-reverse']
    },
    wrap: {
      type: String,
      default: 'wrap',
      values: ['nowrap', 'wrap', 'wrap-reverse']
    }
  }

  /* 容器模板 */
  template: {
    <div class="q-container"
         :class="{
           'q-container--fluid': fluid
         }"
         :style="containerStyle">
      <div class="q-container__inner"
           :style="innerStyle">
        <slot></slot>
      </div>
    </div>
  }

  /* 样式定义 */
  styles: {
    .q-container {
      width: 100%;
      margin-right: auto;
      margin-left: auto;
      box-sizing: border-box;
      
      &--fluid {
        max-width: none;
      }
      
      &__inner {
        display: flex;
        flex-wrap: var(--wrap);
        flex-direction: var(--direction);
        align-items: var(--align);
        justify-content: var(--justify);
        margin: calc(var(--gutter) / -2);
        
        > * {
          padding: calc(var(--gutter) / 2);
          box-sizing: border-box;
        }
      }
      
      /* 响应式断点 */
      @media (max-width: 576px) {
        padding: calc(var(--padding) / 2);
      }
      
      @media (min-width: 576px) {
        max-width: 540px;
      }
      
      @media (min-width: 768px) {
        max-width: 720px;
      }
      
      @media (min-width: 992px) {
        max-width: 960px;
      }
      
      @media (min-width: 1200px) {
        max-width: var(--max-width);
      }
      
      /* 量子态样式 */
      @quantum-state hover {
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.05);
      }
      
      @quantum-state active {
        transform: scale(0.99);
      }
    }
  }

  /* 脚本定义 */
  script: {
    computed: {
      containerStyle() {
        return {
          '--max-width': typeof this.maxWidth === 'number' ? 
            `${this.maxWidth}px` : this.maxWidth,
          '--padding': typeof this.padding === 'number' ? 
            `${this.padding}px` : this.padding
        };
      },
      
      innerStyle() {
        return {
          '--gutter': typeof this.gutter === 'number' ? 
            `${this.gutter}px` : this.gutter,
          '--direction': this.direction,
          '--align': this.align,
          '--justify': this.justify,
          '--wrap': this.wrap
        };
      }
    }
  }
} 