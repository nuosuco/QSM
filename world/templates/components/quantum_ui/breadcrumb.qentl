/* 量子基因编码 */
QG-COMP-BREADCRUMB-UI-NAV-A1B1

/* 量子纠缠信道 */
@quantum-entangle {
  strength: 0.8,
  sync: true,
  objects: [
    "world/static/css/quantum-theme.qcss",
    "world/static/css/quantum-layout.qcss",
    "world/static/css/quantum-animation.qcss"
  ]
}

/* Breadcrumb 组件属性 */
@properties Breadcrumb {
  // 分隔符
  separator: string = '/',
  // 分隔符图标
  separatorIcon: string = '',
  // 路由模式
  routeMode: boolean = false,
  // 量子态配置
  quantum: {
    // 量子纠缠强度
    entangleStrength: number = 0.8,
    // 量子态转换动画
    stateTransition: boolean = true,
    // 量子态持续时间
    stateDuration: number = 300
  }
}

/* BreadcrumbItem 组件属性 */
@properties BreadcrumbItem {
  // 跳转目标
  to: string | object = '',
  // 是否替换
  replace: boolean = false,
  // 禁用状态
  disabled: boolean = false,
  // 量子态配置
  quantum: {
    // 量子纠缠强度
    entangleStrength: number = 0.8,
    // 量子态转换动画
    stateTransition: boolean = true,
    // 量子态持续时间
    stateDuration: number = 300
  }
}

/* Breadcrumb 模板结构 */
<template name="Breadcrumb">
  <div class="q-breadcrumb"
       role="navigation"
       aria-label="Breadcrumb">
    <slot></slot>
  </div>
</template>

/* BreadcrumbItem 模板结构 */
<template name="BreadcrumbItem">
  <span class="q-breadcrumb-item"
        :class="{ 'q-breadcrumb-item-disabled': disabled }">
    <!-- 内容 -->
    <router-link v-if="routeMode && to && !disabled"
                 :to="to"
                 :replace="replace"
                 class="q-breadcrumb-item-link"
                 :class="{ 'q-breadcrumb-item-link-active': isLast }"
                 @click.native="handleClick">
      <slot></slot>
    </router-link>
    <a v-else-if="to && !disabled"
       class="q-breadcrumb-item-link"
       :class="{ 'q-breadcrumb-item-link-active': isLast }"
       @click="handleClick">
      <slot></slot>
    </a>
    <span v-else
          class="q-breadcrumb-item-text"
          :class="{ 'q-breadcrumb-item-text-active': isLast }">
      <slot></slot>
    </span>
    
    <!-- 分隔符 -->
    <span v-if="!isLast"
          class="q-breadcrumb-item-separator">
      <i v-if="separatorIcon"
         :class="separatorIcon"></i>
      <span v-else>{{ separator }}</span>
    </span>
  </span>
</template>

/* 组件样式 */
<style>
/* 面包屑容器 */
.q-breadcrumb {
  display: flex;
  align-items: center;
  font-size: var(--q-font-size);
  line-height: 1.5;
  color: var(--q-text-color);
}

/* 面包屑项目 */
.q-breadcrumb-item {
  display: inline-flex;
  align-items: center;
}

.q-breadcrumb-item-disabled {
  cursor: not-allowed;
  color: var(--q-disabled-color);
}

/* 链接样式 */
.q-breadcrumb-item-link {
  color: var(--q-text-color);
  text-decoration: none;
  cursor: pointer;
  transition: color var(--q-animation-duration) var(--q-animation-timing-function-ease);
}

.q-breadcrumb-item-link-active {
  color: var(--q-primary);
  cursor: default;
}

/* 文本样式 */
.q-breadcrumb-item-text {
  color: var(--q-text-color);
}

.q-breadcrumb-item-text-active {
  color: var(--q-primary);
}

/* 分隔符 */
.q-breadcrumb-item-separator {
  margin: 0 var(--q-spacing-sm);
  color: var(--q-text-color-secondary);
}

/* 量子态样式 */
@quantum-state hover {
  .q-breadcrumb-item-link:not(.q-breadcrumb-item-link-active):hover {
    color: var(--q-primary-light);
  }
}

@quantum-state active {
  .q-breadcrumb-item-link:not(.q-breadcrumb-item-link-active):active {
    color: var(--q-primary-dark);
    transform: scale(0.98);
  }
}
</style>

/* Breadcrumb 组件脚本 */
<script name="Breadcrumb">
export default {
  name: 'QBreadcrumb',
  
  provide() {
    return {
      breadcrumb: this
    }
  },
  
  data() {
    return {
      items: []
    }
  },
  
  methods: {
    addItem(item) {
      this.items.push(item)
    },
    
    removeItem(item) {
      const index = this.items.indexOf(item)
      if (index !== -1) {
        this.items.splice(index, 1)
      }
    },
    
    // 量子态方法
    updateQuantumState(state) {
      if (!this.quantum.stateTransition) return
      
      const quantum = state * this.quantum.entangleStrength
      
      // 应用量子态效果
      this.$el.style.transform = `scale(${1 + quantum * 0.01})`
      this.$el.style.filter = `brightness(${1 + quantum * 0.05})`
    }
  }
}
</script>

/* BreadcrumbItem 组件脚本 */
<script name="BreadcrumbItem">
export default {
  name: 'QBreadcrumbItem',
  
  inject: {
    breadcrumb: {
      default: null
    }
  },
  
  computed: {
    routeMode() {
      return this.breadcrumb.routeMode
    },
    
    separator() {
      return this.breadcrumb.separator
    },
    
    separatorIcon() {
      return this.breadcrumb.separatorIcon
    },
    
    isLast() {
      const items = this.breadcrumb.items
      return items.indexOf(this) === items.length - 1
    }
  },
  
  mounted() {
    this.breadcrumb.addItem(this)
  },
  
  beforeDestroy() {
    this.breadcrumb.removeItem(this)
  },
  
  methods: {
    handleClick(event) {
      if (this.disabled) {
        event.preventDefault()
        return
      }
      
      if (!this.to && !this.routeMode) {
        event.preventDefault()
      }
      
      this.updateQuantumState(1)
      this.$emit('click', event)
    },
    
    // 量子态方法
    updateQuantumState(state) {
      if (!this.quantum.stateTransition) return
      
      const quantum = state * this.quantum.entangleStrength
      
      // 应用量子态效果
      this.$el.style.transform = `scale(${1 + quantum * 0.01})`
      this.$el.style.filter = `brightness(${1 + quantum * 0.05})`
    }
  }
}
</script> 