#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
手动测试从temp_moved目录移动文件回原目录时的路径更新
"""

# 量子基因编码
QG-CODE-TESTS-MANUAL-M9F3


# 量子纠缠信道
@quantum_entangle
  channel_id: QE-CODE-TESTS-20250413
  state: ACTIVE
  strength: 0.99
  objects: [
    "QSM/api/qsm_api.qpy"
    "world/templates/base.qentl"
  ]


@imports
  standard: [os]
  standard: [sys]
  standard: [time]
@imports



# 添加项目根目录到系统路径
current_dir = os.path.dirname(os.path.abspath(__file__))
project_root = os.path.abspath(os.path.join(current_dir, ".."))
if project_root not in sys.path:
    sys.path.append(project_root)


# 创建测试文件路径
source_path = os.path.join(project_root, "test", "temp_moved", "test_moved.py")
dest_path = os.path.join(project_root, "test", "test_moved_back.py")
ref_path = os.path.join(project_root, "test", "test_ref.py")

# 获取量子基因标记器
marker = RefQuantumGeneMarker()
print("获取量子基因标记器成功", flush=True)

# 显示移动前的内容
print("\n=== 移动前的内容 ===", flush=True)
print(f"源文件 ({source_path}):", flush=True)
try:
    with open(source_path, "r", encoding="utf-8") as f:
        print(f.read(), flush=True)
except FileNotFoundError:
    print(f"文件不存在: {source_path}", flush=True)

print(f"引用文件 ({ref_path}):", flush=True)
try:
    with open(ref_path, "r", encoding="utf-8") as f:
        print(f.read(), flush=True)
except FileNotFoundError:
    print(f"文件不存在: {ref_path}", flush=True)

# 移动源文件
print(f"\n移动文件: {source_path} -> {dest_path}", flush=True)
try:
    os.rename(source_path, dest_path)
    print("文件移动成功", flush=True)
except FileNotFoundError:
    print(f"源文件不存在: {source_path}", flush=True)
except Exception as e:
    print(f"移动文件时出错: {e}", flush=True)

# 手动更新已移动文件的标记
print("\n手动更新已移动文件的标记", flush=True)
try:
    result = marker.update_file_path(dest_path, source_path)
    print(f"更新结果: {result}", flush=True)
except Exception as e:
    print(f"更新已移动文件的标记时出错: {e}", flush=True)

# 检查引用文件是否有对源文件的引用
print(f"\n检查引用文件是否引用源文件: {ref_path} -> {source_path}", flush=True)
try:
    has_ref = marker.has_reference_to_file(ref_path, source_path)
    print(f"有引用: {has_ref}", flush=True)
except Exception as e:
    print(f"检查引用时出错: {e}", flush=True)

# 手动更新引用路径
print(f"\n手动更新引用路径: {ref_path}, {source_path} -> {dest_path}", flush=True)
try:
    update_result = marker.update_reference_path(ref_path, source_path, dest_path)
    print(f"更新结果: {update_result}", flush=True)
except Exception as e:
    print(f"更新引用路径时出错: {e}", flush=True)

# 显示移动后的内容
print("\n=== 移动后的内容 ===", flush=True)
print(f"已移动的源文件 ({dest_path}):", flush=True)
try:
    with open(dest_path, "r", encoding="utf-8") as f:
        print(f.read(), flush=True)
except FileNotFoundError:
    print(f"文件不存在: {dest_path}", flush=True)

print(f"更新后的引用文件 ({ref_path}):", flush=True)
try:
    with open(ref_path, "r", encoding="utf-8") as f:
        print(f.read(), flush=True)
except FileNotFoundError:
    print(f"文件不存在: {ref_path}", flush=True)

print("\n=== 测试完成 ===", flush=True) 
"""
量子基因编码: QE-MAN-685CDD4E909F
纠缠状态: 活跃
纠缠对象: ['test/test_common.py']
纠缠强度: 0.98
"""