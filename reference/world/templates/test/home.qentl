{% extends "base.qentl" %}

{% block title %}首页 - 量子叠加态模型系统{% endblock %}

{% block content %}
<div class="q-page-header">
  <h1>量子UI组件库展示</h1>
  <p>展示量子叠加态模型系统中的UI组件</p>
</div>

<div class="q-grid">
  <div class="q-col-12">
    <div class="q-card">
      <div class="q-card-header">
        <h2>欢迎使用量子叠加态模型系统</h2>
      </div>
      <div class="q-card-body">
        <p>量子叠加态模型系统(QSM)是一个基于量子纠缠原理的前端框架，通过量子通信和量子态实现组件间的高效通信与状态同步。</p>
        <p>本页面展示了量子UI组件库中各种组件的使用方法和效果，您可以通过这些组件快速构建量子化的用户界面。</p>
      </div>
      <div class="q-card-footer">
        <button id="btn-show-dialog" class="q-btn q-btn-primary">打开对话框</button>
        <button id="btn-show-notification" class="q-btn q-btn-success">显示通知</button>
        <button id="btn-toggle-theme" class="q-btn q-btn-info">切换主题</button>
      </div>
    </div>
  </div>

  <!-- 卡片组件展示 -->
  <div class="q-col-6">
    <div class="q-section-title">
      <h2>卡片组件</h2>
    </div>
    <div class="q-card q-quantum-hover">
      <div class="q-card-header">
        <h3>基础卡片</h3>
      </div>
      <div class="q-card-body">
        <p>这是一个基础卡片组件，具有标题、内容和底部区域。</p>
        <p>卡片有量子悬停效果，可以感受量子纠缠带来的交互体验。</p>
      </div>
      <div class="q-card-footer">
        <button class="q-btn q-btn-primary q-btn-sm">操作按钮</button>
      </div>
    </div>

    <div class="q-card q-card-primary">
      <div class="q-card-header">
        <h3>主题卡片</h3>
      </div>
      <div class="q-card-body">
        <p>这是一个带有主题色的卡片组件。</p>
      </div>
      <div class="q-card-footer">
        <button class="q-btn q-btn-primary q-btn-sm">操作按钮</button>
      </div>
    </div>
  </div>

  <!-- 表单组件展示 -->
  <div class="q-col-6">
    <div class="q-section-title">
      <h2>表单组件</h2>
    </div>
    <div class="q-card">
      <div class="q-card-header">
        <h3>基础表单</h3>
      </div>
      <div class="q-card-body">
        <form id="demo-form" class="q-form">
          <div class="q-form-item">
            <label class="q-form-label">用户名</label>
            <div class="q-form-control">
              <input type="text" class="q-input" placeholder="请输入用户名">
            </div>
          </div>
          <div class="q-form-item">
            <label class="q-form-label">密码</label>
            <div class="q-form-control">
              <input type="password" class="q-input" placeholder="请输入密码">
            </div>
          </div>
          <div class="q-form-item">
            <label class="q-form-label">选择类型</label>
            <div class="q-form-control">
              <select class="q-select">
                <option value="">请选择</option>
                <option value="1">选项1</option>
                <option value="2">选项2</option>
                <option value="3">选项3</option>
              </select>
            </div>
          </div>
          <div class="q-form-item">
            <div class="q-form-control">
              <label class="q-checkbox">
                <input type="checkbox">
                <span class="q-checkbox-label">记住我</span>
              </label>
            </div>
          </div>
        </form>
      </div>
      <div class="q-card-footer">
        <button type="submit" form="demo-form" class="q-btn q-btn-primary">提交</button>
        <button type="reset" form="demo-form" class="q-btn q-btn-default">重置</button>
      </div>
    </div>
  </div>

  <!-- 按钮组件展示 -->
  <div class="q-col-12">
    <div class="q-section-title">
      <h2>按钮组件</h2>
    </div>
    <div class="q-card">
      <div class="q-card-body">
        <div class="q-buttons">
          <button class="q-btn q-btn-default">默认按钮</button>
          <button class="q-btn q-btn-primary">主要按钮</button>
          <button class="q-btn q-btn-success">成功按钮</button>
          <button class="q-btn q-btn-warning">警告按钮</button>
          <button class="q-btn q-btn-danger">危险按钮</button>
          <button class="q-btn q-btn-info">信息按钮</button>
        </div>
        <div class="q-divider q-my-4"></div>
        <div class="q-buttons">
          <button class="q-btn q-btn-default q-btn-sm">小按钮</button>
          <button class="q-btn q-btn-primary">默认按钮</button>
          <button class="q-btn q-btn-success q-btn-lg">大按钮</button>
        </div>
        <div class="q-divider q-my-4"></div>
        <div class="q-buttons">
          <button class="q-btn q-btn-outline-primary">轮廓按钮</button>
          <button class="q-btn q-btn-link">链接按钮</button>
          <button class="q-btn q-btn-primary" disabled>禁用按钮</button>
          <button class="q-btn q-btn-primary q-btn-circle">
            <i class="q-icon q-icon-plus"></i>
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- 布局组件展示 -->
  <div class="q-col-6">
    <div class="q-section-title">
      <h2>网格布局</h2>
    </div>
    <div class="q-card">
      <div class="q-card-body">
        <div class="q-grid q-grid-demo">
          <div class="q-col-12"><div class="q-grid-box">12</div></div>
          <div class="q-col-6"><div class="q-grid-box">6</div></div>
          <div class="q-col-6"><div class="q-grid-box">6</div></div>
          <div class="q-col-4"><div class="q-grid-box">4</div></div>
          <div class="q-col-4"><div class="q-grid-box">4</div></div>
          <div class="q-col-4"><div class="q-grid-box">4</div></div>
          <div class="q-col-3"><div class="q-grid-box">3</div></div>
          <div class="q-col-3"><div class="q-grid-box">3</div></div>
          <div class="q-col-3"><div class="q-grid-box">3</div></div>
          <div class="q-col-3"><div class="q-grid-box">3</div></div>
        </div>
      </div>
    </div>
  </div>

  <div class="q-col-6">
    <div class="q-section-title">
      <h2>弹性布局</h2>
    </div>
    <div class="q-card">
      <div class="q-card-body">
        <div class="q-flex q-flex-center q-mb-2">
          <div class="q-flex-box">居中对齐</div>
          <div class="q-flex-box">Flex Item</div>
          <div class="q-flex-box">弹性布局</div>
        </div>
        <div class="q-flex q-flex-between q-mb-2">
          <div class="q-flex-box">两端对齐</div>
          <div class="q-flex-box">Flex Item</div>
          <div class="q-flex-box">弹性布局</div>
        </div>
        <div class="q-flex q-flex-column q-flex-center">
          <div class="q-flex-box">垂直布局</div>
          <div class="q-flex-box">Flex Item</div>
          <div class="q-flex-box">弹性布局</div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- 对话框组件 -->
<div id="demo-dialog" class="q-dialog" style="display: none;">
  <div class="q-dialog-overlay"></div>
  <div class="q-dialog-content">
    <div class="q-dialog-header">
      <h3>对话框标题</h3>
      <button class="q-dialog-close" data-close="#demo-dialog">&times;</button>
    </div>
    <div class="q-dialog-body">
      <p>这是一个对话框组件，用于展示重要信息或请求用户确认。</p>
      <p>对话框可以包含各种表单元素和内容。</p>
      <div class="q-form-item">
        <label class="q-form-label">输入内容</label>
        <div class="q-form-control">
          <input type="text" class="q-input" placeholder="请输入内容">
        </div>
      </div>
    </div>
    <div class="q-dialog-footer">
      <button class="q-btn q-btn-default" data-close="#demo-dialog">取消</button>
      <button class="q-btn q-btn-primary">确定</button>
    </div>
  </div>
</div>

<!-- 通知组件 -->
<div id="notification-container" class="q-notification-container">
  <!-- 通知将动态添加到这里 -->
</div>
{% endblock %}

{% block scripts %}
<script type="module">
  // 显示对话框
  document.getElementById('btn-show-dialog').addEventListener('click', function() {
    const dialog = document.getElementById('demo-dialog');
    dialog.style.display = 'flex';
    
    // 添加动画类
    dialog.querySelector('.q-dialog-content').classList.add('q-quantum-fade-enter-active');
    dialog.querySelector('.q-dialog-overlay').classList.add('q-fade-enter-active');
    
    // 关闭对话框事件
    const closeButtons = dialog.querySelectorAll('[data-close]');
    closeButtons.forEach(button => {
      button.addEventListener('click', function() {
        dialog.style.display = 'none';
      });
    });
    
    // 点击遮罩关闭
    dialog.querySelector('.q-dialog-overlay').addEventListener('click', function() {
      dialog.style.display = 'none';
    });
  });
  
  // 显示通知
  document.getElementById('btn-show-notification').addEventListener('click', function() {
    // 创建通知元素
    const notification = document.createElement('div');
    notification.className = 'q-notification q-notification-success';
    notification.innerHTML = `
      <div class="q-notification-content">
        <h4>操作成功</h4>
        <p>这是一条成功通知消息。</p>
      </div>
      <button class="q-notification-close">&times;</button>
    `;
    
    // 添加到容器
    const container = document.getElementById('notification-container');
    container.appendChild(notification);
    
    // 添加关闭按钮事件
    notification.querySelector('.q-notification-close').addEventListener('click', function() {
      notification.classList.add('q-notification-leave-active');
      setTimeout(() => {
        notification.remove();
      }, 300);
    });
    
    // 自动关闭
    setTimeout(() => {
      notification.classList.add('q-notification-leave-active');
      setTimeout(() => {
        notification.remove();
      }, 300);
    }, 3000);
  });
  
  // 切换主题
  document.getElementById('btn-toggle-theme').addEventListener('click', function() {
    window.quantumStore.dispatch('toggleTheme');
  });
</script>
{% endblock %} 