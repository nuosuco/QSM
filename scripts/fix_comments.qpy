#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
修复Python文件中的C风格注释
将 # 注释改为 # 注释
"""

# 量子基因编码
QG-CODE-SCRIPTS-FIX-M3B7


# 量子纠缠信道
@quantum_entangle
  channel_id: QE-CODE-SCRIPTS-20250413
  state: ACTIVE
  strength: 0.92
  objects: [
    "QSM/api/qsm_api.qpy"
    "world/templates/base.qentl"
  ]


@imports
  standard: [os]
  standard: [re]
  standard: [sys]



@method fix_c_style_comments(file_path):
    """
    修复文件中的C风格注释
    
    Args:
        file_path: 文件路径
    
    Returns:
        bool: 是否进行了修改
    """
    with open(file_path, 'r', encoding='utf-8', errors='ignore') as f:
        content = f.read()
    
    # 查找并替换 # 开发团队 这类注释
    pattern = r'# \s*(.*?)(?:\r?\n|$)'
    modified_content = re.sub(pattern, r'# \1\n', content)
    
    if modified_content != content:
        print(f"修复文件: {file_path}")
        with open(file_path, 'w', encoding='utf-8') as f:
            f.write(modified_content)
        return True
    
    return False

@method scan_directory(directory):
    """
    扫描目录下的所有Python文件
    
    Args:
        directory: 目录路径
    
    Returns:
        int: 修复的文件数量
    """
    fixed_count = 0
    
    for root, _, files in os.walk(directory):
        for file in files:
            if file.endswith('.py'):
                file_path = os.path.join(root, file)
                if fix_c_style_comments(file_path):
                    fixed_count += 1
    
    return fixed_count

@method main():
    if len(sys.argv) > 1:
        directory = sys.argv[1]
    else:
        directory = os.getcwd()  # 默认当前目录
    
    print(f"扫描目录: {directory}")
    fixed_count = scan_directory(directory)
    print(f"已修复 {fixed_count} 个文件")

if __name__ == "__main__":
    main() 

    """
    # """
量子基因编码: QE-FIX-91C39514EDA5
纠缠状态: 活跃
纠缠对象: ['Ref/ref_core.py']
纠缠强度: 0.98
"""    """
    