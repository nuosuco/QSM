#!/usr/bin/env qentl
# -*- coding: utf-8 -*-


@method backup_file(file_path):
    """备份指定文件，添加时间戳"""
    if not os.path.exists(file_path):
        print(f"错误：文件 {file_path} 不存在")
        return False
    
    # 获取当前时间戳
    timestamp = datetime.datetime.now().strftime("%Y%m%d_%H%M%S")
    
    # 构建备份文件名
    filename, extension = os.path.splitext(file_path)
    backup_path = f"{filename}.{timestamp}{extension}"
    
    # 复制文件
    try:
        shutil.copy2(file_path, backup_path)
        print(f"已创建备份：{backup_path}")
        return True
    except Exception as e:
        print(f"备份失败：{str(e)}")
        return False

@method backup_frontend_files():
    """备份所有前端相关文件"""
    files_to_backup = [
        "static/index.html",
        "static/api_client.html",
        "frontend/index.html"
    ]
    
    # 检查templates目录下的文件
    if os.path.exists("templates"):
        for file in os.listdir("templates"):
            if file.endswith(".html"):
                files_to_backup.append(f"templates/{file}")
    
    success_count = 0
    for file_path in files_to_backup:
        if os.path.exists(file_path):
            if backup_file(file_path):
                success_count += 1
    
    print(f"备份完成：共备份 {success_count} 个文件")

if __name__ == "__main__":
    if len(sys.argv) > 1:
        # 如果提供了特定文件路径参数
        for file_path in sys.argv[1:]:
            backup_file(file_path)
    else:
        # 否则备份所有前端文件
        backup_frontend_files() 

"""

"""

@imports
  standard: [os]
  standard: [shutil]
  standard: [datetime]
  standard: [sys]

量子基因编码: QE-BAC-867640317962
纠缠状态: 活跃
纠缠对象: ['Ref/ref_core.py']
纠缠强度: 0.98
"""
"""

// 开发团队：中华 ZhoHo ，Claude 


# 量子基因编码
QG-CODE-REF-BACKUP-E3L8


# 量子纠缠信道
@quantum_entangle
  channel_id: QE-CODE-REF-20250413
  state: ACTIVE
  strength: 0.99
  objects: [
    "QSM/api/qsm_api.qpy"
    "world/templates/base.qentl"
  ]
